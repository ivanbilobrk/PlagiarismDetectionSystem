import type { Distribution } from './Distribution'
import type { Cluster } from '@/model/Cluster'
import type { ComparisonListElement } from './ComparisonListElement'
import type { MetricType } from './MetricType'
import type { Language } from './Language'

/**
 * Model of the Overview file generated by JPlag
 */
export class Overview {
  private readonly _submissionFolderPath: Array<string>
  private readonly _baseCodeFolderPath: string
  private readonly _language: Language
  private readonly _fileExtensions: Array<string>
  private readonly _matchSensitivity: number
  private readonly _dateOfExecution: string
  private readonly _durationOfExecution: number
  private readonly _topComparisons: Array<ComparisonListElement>
  private readonly _distributions: Record<MetricType, Distribution>
  private readonly _clusters: Array<Cluster>
  private readonly _totalComparisons: number

  constructor(
    submissionFolderPath: Array<string>,
    baseCodeFolderPath: string,
    language: Language,
    fileExtensions: Array<string>,
    matchSensitivity: number,
    dateOfExecution: string,
    durationOfExecution: number,
    topComparisons: Array<ComparisonListElement>,
    distributions: Record<MetricType, Distribution>,
    clusters: Array<Cluster>,
    totalComparisons: number
  ) {
    this._submissionFolderPath = submissionFolderPath
    this._baseCodeFolderPath = baseCodeFolderPath
    this._language = language
    this._fileExtensions = fileExtensions
    this._matchSensitivity = matchSensitivity
    this._dateOfExecution = dateOfExecution
    this._durationOfExecution = durationOfExecution
    this._topComparisons = topComparisons
    this._distributions = distributions
    this._clusters = clusters
    this._totalComparisons = totalComparisons
  }

  /**
   * @return Path to the folder containing the submissions
   */
  get submissionFolderPath() {
    return this._submissionFolderPath
  }

  /**
   * @return Path to the folder containing the base code
   */
  get baseCodeFolderPath() {
    return this._baseCodeFolderPath
  }

  /**
   * @return Language of the submissions
   */
  get language() {
    return this._language
  }

  /**
   * @return File extensions of the submissions
   */
  get fileExtensions() {
    return this._fileExtensions
  }

  /**
   * @return Match sensitivity used for running JPlag
   */
  get matchSensitivity() {
    return this._matchSensitivity
  }

  /**
   * @return Date of execution of JPlag
   */
  get dateOfExecution() {
    return this._dateOfExecution
  }

  /**
   * @return Time JPlag took to run
   */
  get durationOfExecution() {
    return this._durationOfExecution
  }

  get topComparisons() {
    return this._topComparisons
  }

  /**
   * @return Distributions used in the JPlag Comparison
   */
  get distribution() {
    return this._distributions
  }

  /**
   * @return Clusters of the JPlag Comparison
   */
  get clusters() {
    return this._clusters
  }

  /**
   * @return Total number of comparisons
   */
  get totalComparisons() {
    return this._totalComparisons
  }

  get shownComparisons() {
    return this.topComparisons.length
  }

  get missingComparisons() {
    return this.totalComparisons - this.shownComparisons
  }
}
